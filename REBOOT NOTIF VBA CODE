Sub SendRebootNotification ()

    Dim wsCombined As Worksheet ' Variable for the combined data worksheet
    Dim combinedWs As Worksheet
    Dim lastRow As Long
    Dim existingWsName As String
    Dim firstDataRow As Long
    Dim rng As Range
    Dim tbl As ListObject
    Dim i As Long
    Dim WkStnName As String
    Dim matchedUser As String
    Dim savePath As String
    Dim ws As Worksheet
    Dim attachmentAdded As Boolean
    Dim existingWorkbook As Workbook
    Dim OutlookApp As Object
    Dim OutlookMailItem As Object
    Dim recipientEmail As String
       
    ' Specify the name of the existing worksheet where data will be combined
    existingWsName = "Combined Data"
    
    ' Check if the existing worksheet exists in the workbook
    On Error Resume Next
    Set combinedWs = ThisWorkbook.Worksheets(existingWsName)
    On Error GoTo 0
    
    ' If worksheet doesn't exist, create it
    If combinedWs Is Nothing Then
        Set combinedWs = ThisWorkbook.Worksheets.Add
        combinedWs.Name = existingWsName
    End If
    
    ' Start pasting data from cell A1
    lastRow = 1
    
    ' Loop through all worksheets in the workbook
    For Each wsCombined In ThisWorkbook.Worksheets
        If wsCombined.Name <> existingWsName Then ' Skip the existing combined worksheet itself
            ' Copy data from current worksheet to the combined worksheet
            wsCombined.UsedRange.Copy
            combinedWs.Cells(lastRow, 1).PasteSpecial Paste:=xlPasteValues
            Application.CutCopyMode = False
            
            ' Move to the next available row in the combined worksheet
            lastRow = lastRow + wsCombined.UsedRange.Rows.Count
            
            ' Delete the current worksheet
            Application.DisplayAlerts = False ' Suppress the delete confirmation dialog
            wsCombined.Delete
            Application.DisplayAlerts = True
        End If
    Next wsCombined
    
    ' Autofit columns in the combined worksheet
    combinedWs.Columns.AutoFit
    
    ' Find the first row with data in the combined worksheet
    On Error Resume Next
    firstDataRow = combinedWs.Cells.Find(What:="*", _
                                         SearchOrder:=xlByRows, _
                                         SearchDirection:=xlNext).Row
    On Error GoTo 0
    
    ' Delete all rows above the first data row (if any)
    If firstDataRow > 1 Then
        combinedWs.Rows("1:" & firstDataRow - 1).Delete
    End If
    
    ' Delete duplicate rows based on all columns in the combined worksheet
    ' Keep the first occurrence of duplicates
    If combinedWs.Cells(1, 1).CurrentRegion.Rows.Count > 1 Then
        Dim lastCol As Long
        lastCol = combinedWs.Cells(1, combinedWs.Columns.Count).End(xlToLeft).Column
        combinedWs.Range("A2", combinedWs.Cells(combinedWs.Rows.Count, lastCol).End(xlUp)).RemoveDuplicates Columns:=Array(1, 2, 3, 4, 5, 6), Header:=xlYes
    End If
    
    ' Delete rows where "Installed" is found in column E
    lastRow = combinedWs.Cells(combinedWs.Rows.Count, "E").End(xlUp).Row
    For i = lastRow To 2 Step -1 ' Start from the last row and move upwards
        If combinedWs.Cells(i, "E").Value = "Installed" Or combinedWs.Cells(i, "A").Value = "Computer Name" Then
            combinedWs.Rows(i).Delete
        End If
    Next i
    
    ' Insert a column to the right of Column A with header "Last Known User"
    combinedWs.Columns("B:B").Insert Shift:=xlToRight
    combinedWs.Cells(1, 2).Value = "Last Known User"
    
    ' Autofit the "Last Known User" column
    combinedWs.Columns("B").AutoFit
    
    ' Define the range of the table
    Set rng = combinedWs.Range("A1").CurrentRegion
    
    ' Create a table (ListObject) from the range
    Set tbl = combinedWs.ListObjects.Add(xlSrcRange, rng, , xlYes)
    tbl.Name = "Table1"
    tbl.TableStyle = "TableStyleLight13"
    tbl.AutoFilter.ShowAllData
    
    ' Find the last row with data in Column A
    lastRow = combinedWs.Cells(combinedWs.Rows.Count, "A").End(xlUp).Row
    
    ' Loop through each cell in Column A
    For i = 2 To lastRow ' Start from 2 to skip header row
        ' Get the value in Column A (workstation name)
        WkStnName = combinedWs.Cells(i, 1).Value
        
        ' Match workstation name to user, did 2 fake examples for syntax example purposes
        Select Case WkStnName
            Case "[INSERT WORKSTATION NAME HERE]"
                matchedUser = "[INSERT NAME OF USER HERE]"
            Case "fake-wkstn"
                matchedUser = "[USERNAME]"
            Case Else
                matchedUser = "Undetermined"
        End Select
        
    ' Insert the matched user into Column B
        combinedWs.Cells(i, 2).Value = matchedUser
    Next i

    ' Delete rows where "Undetermined" is found in column B
    lastRow = combinedWs.Cells(combinedWs.Rows.Count, "B").End(xlUp).Row
    For i = lastRow To 2 Step -1 ' Start from the last row and move upwards
        If combinedWs.Cells(i, "B").Value = "Installed" Or combinedWs.Cells(i, "B").Value = "Undetermined" Then
            combinedWs.Rows(i).Delete
        End If
    Next i
    
    ' Set the active worksheet
    Set ws = ActiveSheet
    
    ' Specify the save path for the PDF
    savePath = "C:[INSERT SAVE PATH HERE].pdf"
    
    ' Set worksheet orientation to landscape
    ws.PageSetup.Orientation = xlLandscape
    
    ' Set worksheet to fit to 1 page wide and 1 page tall
    ws.PageSetup.FitToPagesWide = 1
    ws.PageSetup.FitToPagesTall = 1
    
    ' Export the active sheet as PDF
    ws.ExportAsFixedFormat Type:=xlTypePDF, Filename:=savePath, Quality:=xlQualityStandard
    
      ' Notify user upon successful export
    MsgBox "PDF file saved to 'TechMisc' folder.", vbInformation
    
    ' Send email to each recipient in Column B (BCC)
    lastRow = ws.Cells(ws.Rows.Count, "B").End(xlUp).Row ' Find last row with data in Column B
    
    ' Create Outlook application object
    Set OutlookApp = CreateObject("Outlook.Application")
    
    ' Create new email
    Set OutlookMailItem = OutlookApp.CreateItem(0)
    
    ' Construct BCC recipients
    For i = 2 To lastRow ' Assuming data starts from row 2 and row 1 is header
        recipientEmail = ws.Cells(i, "B").Value & "@[INSERT COMPANY EMAIL ADDRESS].com"
        
        ' Add each recipient to BCC field
        If Len(OutlookMailItem.BCC) > 0 Then
            OutlookMailItem.BCC = OutlookMailItem.BCC & "; " & recipientEmail
        Else
            OutlookMailItem.BCC = recipientEmail
        End If
    Next i
    
    ' Compose the email
    With OutlookMailItem
        .Subject = "Workstation Reboot Needed"
        .Body = "This is a message from your IT department. If you have received this email, it is necessary that you reboot your computer as soon as possible. Thank you!"
        
        ' Display the email for review before sending
        .Display
        '.Send ' Uncomment this line to send the email automatically without preview
    End With
    
    ' Clean up
    Set OutlookMailItem = Nothing
    Set OutlookApp = Nothing
    
    ' Notify user that emails have been sent
    MsgBox "Process Complete.", vbInformation

End Sub
